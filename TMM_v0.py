# -*- coding: utf-8 -*-
"""
Created on Wed Feb 10 13:31:26 2021

@author: Mads
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.constants import epsilon_0, mu_0
import sympy as sp

# data from Kimble paper


paper_w=np.array([650.6596975,651.2385206,652.810248,655.5685627,657.0879733,659.3086504,659.9765233,661.4124498,662.3474717,663.3649956,666.0291206,670.2101562,673.5157894,674.8767657,675.6715344,676.6065563,676.7468096,678.8973601,681.9829325,684.6944961,684.7879983,687.2190554,687.9047381,687.9047381,688.0605751,690.2228133,691.2162742,692.5603682,697.0017224,700.2158603,700.8272208,701.7262804,702.3565685,704.4234591,704.7573955,705.060974,706.6675117,709.2154465,711.9036346,712.1841412,713.6886765,713.9489951,715.4099669,715.4878854,715.539831,716.5164095,717.0462553,717.6890828,717.7262712,719.1500546,721.0534921,722.4226314,725.2610909,726.6302301,727.9548446,728.500274,728.9288257,729.0740375,731.0196387,731.0715844,731.7728508,732.1936107,732.7078728,733.2087774,734.9285499,735.2791831,735.7466941,737.4728884,738.2400859,738.2920316,738.3180044,739.0192708,739.2530263,740.0878674,740.2659668,740.488591,740.5553783,740.8893147,742.2139291,743.1749239,743.6943805,743.6943805,744.3177285,745.0969135,748.0458288,749.5967065,751.1745561,751.4720631,751.797904,752.4435144,753.3029613,753.4401862,753.9863326,754.6697039,754.6697039,754.6697039,754.6697039,754.6697039,755.3530752,756.0500276,756.5371819,756.7846877,756.7846877,756.8946903,756.9405247,756.9850496,757.2521987,757.2521987,757.2521987,757.6417912,757.7197097,757.7197097,757.7197097,757.7197097,758.4988946,759.2780796,759.2780796,759.4027491,759.4027491,759.456179,759.7767579,759.8447595,759.9014275,759.9493774,760.6072774,760.7765121,760.9922864,761.2260419,762.8623303,764.8659488,771.2775278,776.4201485,781.5627691,786.7053898,791.8480105,796.9906311,802.1332518,807.2758725,812.4184932,817.5611138,822.7037345,827.8463552,832.9889758,838.1315965,843.2742172,848.4168379,853.5594585,858.7020792,863.8446999,868.9873205,874.1299412,879.2725619,884.4151825,889.5578032,894.7004239,899.8430446,904.9856652,910.1282859,915.2709066,920.4135272,925.5561479,930.6987686,935.8413893,940.9840099,946.1266306,950.6848626,953.7626431,955.0385585,956.6456274,956.8793829,957.8994069,958.1065992,958.2819158,958.2819158,958.5935898,958.8273453,958.9831823,959.1649921,959.1835441,959.9961227,960.1519597,960.1519597,960.255851,961.4269896,961.5544926,961.5544926,961.6880672,962.3856232,962.7817089,963.034944,963.2120315,963.6248983,963.658292,963.658292,963.658292,964.8270694,965.2945804,965.2945804,966.4633578,966.6971133,966.6971133,966.7750318,967.0867058,967.8658907,967.8992844,968.0996462,968.1664335,969.3268625,969.4353918,970.437201,971.9566117,973.3758414,975.0273088,980.0601352,981.9246135,983.1638886,983.2937527,985.9819408,987.1597088,987.1896775,988.9038844,989.2415312,990.5090054,991.2414392,991.9427057,993.1894016,993.5010756,993.5789941,994.981527,995.4490379,995.5127894,996.114342,998.1761853,1000.085188,1003.046091,1003.942154,1005.968035,1006.279709,1006.591383,1006.769482,1008.928938,1010.175634,1011.811922,1011.967759,1013.261206,1015.390179,1017.655809,1021.863408,1026.538517,1030.011456,1032.148649,1033.551182,1035.18747,1035.18747,1035.382267,1038.693803,1039.804141,1041.732624,1042.355972,1043.719546,1046.471485,1048.511533,1049.68031])*1e-9
paper_T = np.array([0.912171433,0.941749991,0.973626418,0.977007254,0.96054896,0.930695045,0.898071775,0.863701677,0.838953067,0.803035664,0.770452718,0.754997541,0.787695489,0.822884535,0.848778218,0.872523323,0.898136233,0.934482456,0.971710069,0.90248944,0.936122695,0.870795886,0.80209306,0.843140523,0.827691247,0.760279664,0.732785884,0.69982758,0.680564699,0.734000777,0.706203317,0.760050458,0.805800906,0.840155662,0.863934115,0.901188019,0.937577061,0.966351979,0.961983296,0.932945967,0.892244884,0.852964508,0.751664846,0.808815677,0.785298497,0.699404201,0.733439339,0.657401489,0.605641982,0.623630023,0.587270482,0.551288076,0.551414708,0.570656896,0.60101479,0.629316483,0.698292055,0.653083041,0.734832473,0.767844754,0.799568766,0.899357774,0.862243806,0.825629655,0.940081308,0.993186571,0.967331085,0.898682066,0.862304021,0.800562748,0.832147549,0.7277215,0.756205957,0.704437,0.634843078,0.664869852,0.600807993,0.568764378,0.537504538,0.462928375,0.430890325,0.501034017,0.397537902,0.356824693,0.329592769,0.317920466,0.346605709,0.373149516,0.422266412,0.45677086,0.532150993,0.500882339,0.610525778,0.58114546,0.649716889,0.672574032,0.695431175,0.786859746,0.747683511,0.860024651,0.899132162,0.731637991,0.926729789,0.766943182,0.820746501,0.68355866,0.707510454,0.662160242,0.634543956,0.609156477,0.587749352,0.563176721,0.53860409,0.514031458,0.800906791,0.435304307,0.337013783,0.455857319,0.357566795,0.490355322,0.258833567,0.399873086,0.237985419,0.301049966,0.202014565,0.103418261,0.164130474,0.139337,0.062518799,0.030053484,0.002773836,0.001915952,0.001058068,0.001114042,0.001170016,0.002444468,0.001789663,0.001337938,0.001393912,0.001449887,0.001505861,0.001561835,0.001617809,0.001673783,0.001729757,0.003816527,0.002247865,0.001897679,0.001953654,0.002009628,0.002065602,0.002121576,0.00217755,0.002233524,0.002289498,0.004782427,0.002401446,0.00245742,0.002513395,0.002569369,0.002625343,0.003290556,0.003854229,0.004824061,0.012769677,0.026913015,0.060640804,0.104308343,0.14574561,0.168943229,0.204330797,0.302249148,0.264121593,0.241112675,0.335460078,0.503282523,0.433010217,0.362272804,0.403493328,0.459455436,0.545610266,0.524611836,0.579963439,0.700797263,0.806907739,0.634533779,0.664724465,0.91146893,0.607852323,0.732765954,0.767934498,0.84912006,0.878049112,0.965617033,0.949086354,0.899953813,0.913362155,0.807625379,0.729080144,0.699669994,0.751049131,0.623346761,0.657602911,0.562671681,0.514324596,0.539888695,0.593789648,0.440382897,0.476205868,0.402179754,0.365129914,0.338067599,0.31223741,0.316147316,0.347893961,0.40158547,0.368771666,0.427440158,0.503021182,0.464777641,0.527717127,0.553596527,0.605734085,0.649488787,0.674627519,0.731232603,0.764620024,0.707594994,0.842387417,0.8688267,0.803114221,0.904332515,0.941835856,0.968202626,0.95677516,0.930164563,0.866893473,0.837298014,0.803607117,0.899413064,0.756348861,0.723474818,0.698038857,0.667026915,0.636436898,0.600761021,0.568957864,0.546200724,0.555367626,0.582336038,0.606931931,0.630179502,0.657413363,0.676215148,0.698369868,0.723723168,0.762269607,0.795240261,0.827824398,0.86046313,0.905183287,0.938064898,0.954909251])



i= 1j

def Y(n):
    return np.sqrt(epsilon_0/mu_0)*n

"Matrix representing a layer"
def M(w, x, n):
    M11=np.cos(2*np.pi/w*n*x) 
    M12=(i*np.sin(2*np.pi/w*n*x)/Y(n))
    M21=(i*np.sin(2*np.pi/w*n*x)*Y(n))
    M22=np.cos(2*np.pi/w*n*x)
    return np.array([[M11,M12],[M21,M22]])

"transmission coefficient"
def T(M, no, ns):
    Yo=Y(no)
    Ys=Y(ns)
    t = 2*Yo/(Yo*M[0,0]+Yo*Ys*M[0,1]+M[1,0]+Ys*M[1,1])
    return ns/no * np.abs(t)**2

def BilayerStack(w, wCenter, nh, nl, Nlayer):
    Mh = M(w, wCenter/(nh*4.0), nh)
    Ml = M(w, wCenter/(nl*4.0), nl)
    B=np.dot(Mh,Ml)
    B_Nlayers = np.linalg.matrix_power(B,Nlayer)
    return np.dot(B_Nlayers,Mh)


wCenter = 850e-9
nl=1.455
nh=2.0411
no=1.0
ns=1.5098
Nlayer = 17

w_range = np.linspace(650e-9,1050e-9, 300)
model_T = []
for ii, w_i in enumerate(w_range):
    M_i = BilayerStack(w_i, wCenter, nh, nl, Nlayer)
    model_T.append(T(M_i, no,ns))
    
hf = plt.figure('transmission from model')
hf.clf()
ax = hf.add_subplot(111)
ax.plot(w_range*1e9,model_T, color = 'black')
ax.plot(paper_w*1e9, paper_T, color = 'red', linestyle = 'none', marker = '.')
plt.grid()
#ax.semilogy()
ax.set_xlabel('$\lambda$ (nm)')

#%%
